install.packages("igraph")
library(multinetsimR)
library(multinetsimR)
library(multinetsimR)
library(multinetsimR)
simulated_theta_cov = get_multi_covariance(p = as.numeric(commandArgs(T)), n = 3)
simulated_theta_cov = get_multi_covariance(p = as.numeric(commandArgs(T)), n = 3, prop_sample = 0.6)
library(multinetsimR)
simulated_theta_cov = get_multi_covariance(p = as.numeric(commandArgs(T)), n = 3, prop_sample = 0.6)
library(igraph)
simulated_theta_cov = get_multi_covariance(p = as.numeric(commandArgs(T)), n = 3, prop_sample = 0.6)
igraph::sample_pa(n = p)
simulated_theta_cov = get_multi_covariance(p = 50, n = 3, prop_sample = 0.6)
simulated_theta_cov = get_multi_covariance(p = 50, n = 3, prop_sample = 0.6)
get_multi_covariance(p = 50)
library(multinetsimR)
simulated_theta_cov = get_multi_covariance(p = 50, n = 3, prop_sample = 0.6)
p = 50
graph::sample_pa(p, directed = T)
igraph::sample_pa(p, directed = T)
simulated_theta_cov = get_multi_covariance(p = 50, n = 3, prop_sample = 0.6)
union(igraph::sample_pa(p, directed = T),
igraph::sample_pa(p, directed = T),
igraph::sample_pa(p, directed = T))
library(multinetsimR)
simulated_theta_cov = get_multi_covariance(p = 50, n = 3, prop_sample = 0.6)
library(multinetsimR)
simulated_theta_cov = get_multi_covariance(p = 50, n = 3, prop_sample = 0.6)
library(multinetsimR)
source('~/.active-rstudio-document', echo=TRUE)
library(multinetsimR)
simulated_theta_cov = get_multi_covariance(p = 50, n = 3, prop_sample = 0.6)
simulated_theta_cov = get_multi_covariance(p = 50, n = 3, prop_sample = 0.6)
library(multinetsimR)
simulated_theta_cov = get_multi_covariance(p = 50, n = 3, prop_sample = 0.6)
library(multinetsimR)
simulated_theta_cov = get_multi_covariance(p = 50, n = 3, prop_sample = 0.6)
library(multinetsimR)
simulated_theta_cov = get_multi_covariance(p = 50, n = 3, prop_sample = 0.6)
simulated_theta_cov = get_multi_covariance(p = 50, n = 3, prop_sample = 0.6)
simulated_theta_cov
simulated_theta_cov$mat
length(simulated_theta_cov$mat
)
length(simulated_theta_cov$mat$theta
)
simulated_theta_cov$mat$theta
simulated_theta_cov$mat$cov_mat
covariance_mat <- lapply(simulated_theta_cov$mat, function(x){
x$theta
})
simulated_theta_cov$mat$theta
covariance_mat
class(simulated_theta_cov)
class(simulated_theta_cov$mat)
names(simulated_theta_cov$mat)
class(simulated_theta_cov$mat[[1]])
names(simulated_theta_cov$mat[[1]])
simulated_theta_cov$mat[[1]]$theta
simulated_theta_cov$mat[[1]]$covariance
simulated_theta_cov$mat[[1]]$theta
simulated_theta_cov$graphs[[1]]
as.undirected(simulated_theta_cov$graphs[[1]])
as.undirected(simulated_theta_cov$graphs[[1]], mode = mutual)
as.undirected(simulated_theta_cov$graphs[[1]], mode = "mutual")
as.undirected(simulated_theta_cov$graphs[[1]], mode = "collapse")
library(multinetsimR)
simulated_theta_cov = get_multi_covariance(p = 50, n = 3, prop_sample = 0.6)
simulated_theta_cov$graphs[[1]]
library(multinetsimR)
simulated_theta_cov = get_multi_covariance(p = 50, n = 3, prop_sample = 0.6)
simulated_theta_cov$graphs[[1]]
library(multinetsimR)
simulated_theta_cov = get_multi_covariance(p = 50, n = 3, prop_sample = 0.6)
simulated_theta_cov$graphs[[1]]
library(multinetsimR)
simulated_theta_cov = get_multi_covariance(p = 50, n = 3, prop_sample = 0.6)
simulated_theta_cov$graphs[[1]]
as.undirected(simulated_theta_cov$graphs[[1]])
as.undirected(simulated_theta_cov$graphs)
lapply(simulated_theta_cov$graphs
,
sda
````
lapply(simulated_theta_cov$graphs, function(x) as.undirected(x))
library(multinetsimR)
library(multinetsimR)
simulated_theta_cov = get_multi_covariance(p = 50, n = 3, prop_sample = 0.6)
simulated_theta_cov$graphs[[1]]
library(multinetsimR)
simulated_theta_cov = get_multi_covariance(p = as.numeric(commandArgs(T)), n = 3, prop_sample = 0.6)
simulated_theta_cov = get_multi_covariance(p =50, n = 3, prop_sample = 0.6)
simulated_theta_cov = get_multi_covariance(p =50, n = 3, prop_sample = 0.6)
source('~/research/soft_cluster_transfer_learning/multinetsimR/R/get_multi_covariance.R')
library(multinetsimR)
simulated_theta_cov = get_multi_covariance(p =50, n = 3, prop_sample = 0.6)
simulated_theta_cov = get_multi_covariance(p =50, n = 3, prop_sample = 0.6)
library(multinetsimR)
simulated_theta_cov = get_multi_covariance(p =50, n = 3, prop_sample = 0.6)
