a[abs(a)<0.05] <- 0
b[abs(b)<0.05] <-0
k <- a-b
norm(k, type = 'f')
}, x)
})
diag(dist_norm2) <- NA
gplots::heatmap.2(dist_norm2, trace = "none")
dist_norm2
library(igraph)
library(netsimulatR)
set.seed(101)
dat_sim <- get_multi_covariance(p=200, num_nets = 3, n= 300)
covariance_mat <- lapply(dat_sim, function(x){
x$covariance
})
mixture_weights <- list(d1 = c(0.6, 0.3, 0.1),
d2 = c(0.7, 0.1, 0.2),
d3 = c(0.4, 0.5, 0.1),
d4 = c(0.1, 0.7, 0.2),
d5 = c(0.3, 0.1, 0.6))
# a = sapply(dat_sim, function(x) plot(x$graph))
covariance_mat <- lapply(dat_sim, function(x){
x$precision
})
dat_cov <- lapply(mixture_weights, function(eachmix, covlist){
mix_list = mapply(function(x,y){
x*y
}, eachmix, covlist, SIMPLIFY = F)
solve(netsimulatR:::.add(mix_list))
}, covlist = covariance_mat)
gen_empirical_covariance = lapply(dat_cov, function(x){
dat_tmp = mvtnorm::rmvnorm(300, sigma = x) #+ (mvtnorm::rmvnorm(100, sigma = diag(500)))
solve(cov(scale(dat_tmp)))
})
dist_norm2 = sapply(gen_empirical_covariance, function(x){
sapply(gen_empirical_covariance, function(a,b){
a[abs(a)<0.05] <- 0
b[abs(b)<0.05] <-0
k <- a-b
norm(k, type = 'f')
}, x)
})
diag(dist_norm2) <- NA
gplots::heatmap.2(dist_norm2, trace = "none")
dist_norm2
library(igraph)
library(netsimulatR)
set.seed(111)
dat_sim <- get_multi_covariance(p=200, num_nets = 3, n= 300)
covariance_mat <- lapply(dat_sim, function(x){
x$covariance
})
mixture_weights <- list(d1 = c(0.6, 0.3, 0.1),
d2 = c(0.7, 0.1, 0.2),
d3 = c(0.4, 0.5, 0.1),
d4 = c(0.1, 0.7, 0.2),
d5 = c(0.3, 0.1, 0.6))
# a = sapply(dat_sim, function(x) plot(x$graph))
covariance_mat <- lapply(dat_sim, function(x){
x$precision
})
dat_cov <- lapply(mixture_weights, function(eachmix, covlist){
mix_list = mapply(function(x,y){
x*y
}, eachmix, covlist, SIMPLIFY = F)
solve(netsimulatR:::.add(mix_list))
}, covlist = covariance_mat)
gen_empirical_covariance = lapply(dat_cov, function(x){
dat_tmp = mvtnorm::rmvnorm(300, sigma = x) #+ (mvtnorm::rmvnorm(100, sigma = diag(500)))
solve(cov(scale(dat_tmp)))
})
dist_norm2 = sapply(gen_empirical_covariance, function(x){
sapply(gen_empirical_covariance, function(a,b){
a[abs(a)<0.05] <- 0
b[abs(b)<0.05] <-0
k <- a-b
norm(k, type = 'f')
}, x)
})
diag(dist_norm2) <- NA
gplots::heatmap.2(dist_norm2, trace = "none")
dist_norm2
library(igraph)
library(netsimulatR)
set.seed(111)
dat_sim <- get_multi_covariance(p=500, num_nets = 3, n= 300)
covariance_mat <- lapply(dat_sim, function(x){
x$covariance
})
mixture_weights <- list(d1 = c(0.6, 0.3, 0.1),
d2 = c(0.7, 0.1, 0.2),
d3 = c(0.4, 0.5, 0.1),
d4 = c(0.1, 0.7, 0.2),
d5 = c(0.3, 0.1, 0.6))
# a = sapply(dat_sim, function(x) plot(x$graph))
covariance_mat <- lapply(dat_sim, function(x){
x$precision
})
dat_cov <- lapply(mixture_weights, function(eachmix, covlist){
mix_list = mapply(function(x,y){
x*y
}, eachmix, covlist, SIMPLIFY = F)
solve(netsimulatR:::.add(mix_list))
}, covlist = covariance_mat)
gen_empirical_covariance = lapply(dat_cov, function(x){
dat_tmp = mvtnorm::rmvnorm(300, sigma = x) #+ (mvtnorm::rmvnorm(100, sigma = diag(500)))
solve(cov(scale(dat_tmp)))
})
library(igraph)
library(netsimulatR)
set.seed(111)
dat_sim <- get_multi_covariance(p=500, num_nets = 3, n= 300)
covariance_mat <- lapply(dat_sim, function(x){
x$covariance
})
mixture_weights <- list(d1 = c(0.6, 0.3, 0.1),
d2 = c(0.7, 0.1, 0.2),
d3 = c(0.4, 0.5, 0.1),
d4 = c(0.1, 0.7, 0.2),
d5 = c(0.3, 0.1, 0.6))
# a = sapply(dat_sim, function(x) plot(x$graph))
covariance_mat <- lapply(dat_sim, function(x){
x$precision
})
dat_cov <- lapply(mixture_weights, function(eachmix, covlist){
mix_list = mapply(function(x,y){
x*y
}, eachmix, covlist, SIMPLIFY = F)
solve(netsimulatR:::.add(mix_list))
}, covlist = covariance_mat)
gen_empirical_covariance = lapply(dat_cov, function(x){
dat_tmp = mvtnorm::rmvnorm(300, sigma = x) #+ (mvtnorm::rmvnorm(100, sigma = diag(500)))
cov(scale(dat_tmp))
})
dist_norm2 = sapply(gen_empirical_covariance, function(x){
sapply(gen_empirical_covariance, function(a,b){
a[abs(a)<0.05] <- 0
b[abs(b)<0.05] <-0
k <- a-b
norm(k, type = 'f')
}, x)
})
diag(dist_norm2) <- NA
gplots::heatmap.2(dist_norm2, trace = "none")
dist_norm2
library(igraph)
library(netsimulatR)
set.seed(111)
dat_sim <- get_multi_covariance(p=500, num_nets = 3, n= 300)
covariance_mat <- lapply(dat_sim, function(x){
x$covariance
})
mixture_weights <- list(d1 = c(0.6, 0.3, 0.1),
d2 = c(0.7, 0.1, 0.2),
d3 = c(0.4, 0.5, 0.1),
d4 = c(0.1, 0.7, 0.2),
d5 = c(0.15, 0.25, 0.6))
# a = sapply(dat_sim, function(x) plot(x$graph))
covariance_mat <- lapply(dat_sim, function(x){
x$precision
})
dat_cov <- lapply(mixture_weights, function(eachmix, covlist){
mix_list = mapply(function(x,y){
x*y
}, eachmix, covlist, SIMPLIFY = F)
solve(netsimulatR:::.add(mix_list))
}, covlist = covariance_mat)
gen_empirical_covariance = lapply(dat_cov, function(x){
dat_tmp = mvtnorm::rmvnorm(300, sigma = x) #+ (mvtnorm::rmvnorm(100, sigma = diag(500)))
cov(scale(dat_tmp))
})
dist_norm2 = sapply(gen_empirical_covariance, function(x){
sapply(gen_empirical_covariance, function(a,b){
a[abs(a)<0.05] <- 0
b[abs(b)<0.05] <-0
k <- a-b
norm(k, type = 'f')
}, x)
})
diag(dist_norm2) <- NA
gplots::heatmap.2(dist_norm2, trace = "none")
dist_norm2
sapply(covariance_mat, function(a,b){
a[abs(a)<0.05] <- 0
b[abs(b)<0.05] <-0
k <- a-b
norm(k, type = 'f')
}, x)
dist_norm2 = sapply(covariance_mat, function(x){
sapply(covariance_mat, function(a,b){
a[abs(a)<0.05] <- 0
b[abs(b)<0.05] <-0
k <- a-b
norm(k, type = 'f')
}, x)
})
diag(dist_norm2) <- NA
gplots::heatmap.2(dist_norm2, trace = "none")
library(netsimulatR)
library(igraph)
library(netsimulatR)
set.seed(111)
dat_sim <- get_multi_covariance(p=500, num_nets = 3, n= 300)
covariance_mat <- lapply(dat_sim, function(x){
x$covariance
})
mixture_weights <- list(d1 = c(0.6, 0.3, 0.1),
d2 = c(0.7, 0.1, 0.2),
d3 = c(0.4, 0.5, 0.1),
d4 = c(0.1, 0.7, 0.2),
d5 = c(0.15, 0.25, 0.6))
# a = sapply(dat_sim, function(x) plot(x$graph))
covariance_mat <- lapply(dat_sim, function(x){
x$precision
})
dat_cov <- lapply(mixture_weights, function(eachmix, covlist){
mix_list = mapply(function(x,y){
x*y
}, eachmix, covlist, SIMPLIFY = F)
solve(netsimulatR:::.add(mix_list))
}, covlist = covariance_mat)
gen_empirical_covariance = lapply(dat_cov, function(x){
dat_tmp = mvtnorm::rmvnorm(300, sigma = x) #+ (mvtnorm::rmvnorm(100, sigma = diag(500)))
cov(scale(dat_tmp))
})
dist_norm2 = sapply(gen_empirical_covariance, function(x){
sapply(gen_empirical_covariance, function(a,b){
a[abs(a)<0.05] <- 0
b[abs(b)<0.05] <-0
k <- a-b
norm(k, type = 'f')
}, x)
})
diag(dist_norm2) <- NA
gplots::heatmap.2(dist_norm2, trace = "none")
dist_norm2
gplots::heatmap.2(scale(dist_norm2), trace = "none")
diag(dist_norm2) <- NA
gplots::heatmap.2(dist_norm2, trace = "none")
diag(dist_norm2) <- NA
gplots::heatmap.2(dist_norm2, trace = "none")
dist_norm2
gplots::heatmap.2(dist_norm2, trace = "none")
dist_norm2 = sapply(gen_empirical_covariance, function(x){
sapply(gen_empirical_covariance, function(a,b){
k <- a-b
norm(k, type = 'f')
}, x)
})
diag(dist_norm2) <- NA
gplots::heatmap.2(dist_norm2, trace = "none")
dist_norm2
gplots::heatmap.2(dist_norm2, trace = "none", na.color = "gray")
gplots::heatmap.2(scale(dist_norm2), trace = "none", na.color = "gray")
gplots::heatmap.2(dist_norm2, trace = "none", hclustfun = function(x) hclust(x, method = "ward", na.color = "gray")
gplots::heatmap.2(dist_norm2, trace = "none", hclustfun = function(x) hclust(x, method = "ward", na.color = "gray")
gplots::heatmap.2(dist_norm2, trace = "none", hclustfun = function(x) hclust(x, method = "ward"), na.color = "gray")
gplots::heatmap.2(dist_norm2, trace = "none", hclustfun = function(x) hclust(x, method = "average"), na.color = "gray")
gplots::heatmap.2(dist_norm2, trace = "none", hclustfun = function(x) hclust(x, method = "median"), na.color = "gray")
gplots::heatmap.2(dist_norm2, trace = "none", hclustfun = function(x) hclust(x, method = "centroid"), na.color = "gray")
gplots::heatmap.2(dist_norm2, trace = "none", hclustfun = function(x) hclust(x, method = "single"), na.color = "gray")
gplots::heatmap.2(dist_norm2, trace = "none", hclustfun = function(x) hclust(x, method = "ward.D"), na.color = "gray")
gplots::heatmap.2(dist_norm2, trace = "none", hclustfun = function(x) hclust(x, method = "ward.D2"), na.color = "gray")
gplots::heatmap.2(dist_norm2, trace = "none", hclustfun = function(x) hclust(x, method = "complete"), na.color = "gray")
covariance_mat <- lapply(dat_sim, function(x){
x$precision
})
dat_cov <- lapply(mixture_weights, function(eachmix, covlist){
mix_list = mapply(function(x,y){
x*y
}, eachmix, covlist, SIMPLIFY = F)
solve(netsimulatR:::.add(mix_list))
}, covlist = covariance_mat)
gen_empirical_covariance = lapply(dat_cov, function(x){
dat_tmp = mvtnorm::rmvnorm(300, sigma = x) #+ (mvtnorm::rmvnorm(100, sigma = diag(500)))
cov(scale(dat_tmp))
})
dist_norm2 = sapply(gen_empirical_covariance, function(x){
sapply(gen_empirical_covariance, function(a,b){
k <- a-b
norm(k, type = 'f')
}, x)
})
diag(dist_norm2) <- NA
gplots::heatmap.2(dist_norm2, trace = "none", hclustfun = function(x) hclust(x, method = "complete"), na.color = "gray")
dist_norm2
gplots::heatmap.2(dist_norm2, trace = "none", hclustfun = function(x) hclust(x, method = "complete"),
distfun = function(x) dist(x,method = "manhattan"),
na.color = "gray")
gplots::heatmap.2(dist_norm2, trace = "none", hclustfun = function(x) hclust(x, method = "complete"),
distfun = function(x) dist(x,method = "maximum"),
na.color = "gray")
gplots::heatmap.2(dist_norm2, trace = "none", hclustfun = function(x) hclust(x, method = "complete"),
distfun = function(x) dist(x,method = "euclidean"),
na.color = "gray")
dist_norm2
covariance_mat <- lapply(dat_sim, function(x){
x$precision
})
dat_cov <- lapply(mixture_weights, function(eachmix, covlist){
mix_list = mapply(function(x,y){
x*y
}, eachmix, covlist, SIMPLIFY = F)
solve(netsimulatR:::.add(mix_list))
}, covlist = covariance_mat)
gen_empirical_covariance = lapply(dat_cov, function(x){
dat_tmp = mvtnorm::rmvnorm(300, sigma = x) #+ (mvtnorm::rmvnorm(100, sigma = diag(500)))
cov(scale(dat_tmp))
})
dist_norm2 = sapply(gen_empirical_covariance, function(x){
sapply(gen_empirical_covariance, function(a,b){
k <- a-b
norm(k, type = 'f')
}, x)
})
diag(dist_norm2) <- NA
gplots::heatmap.2(dist_norm2, trace = "none", hclustfun = function(x) hclust(x, method = "complete"),
distfun = function(x) dist(x,method = "euclidean"),
na.color = "gray")
dist_norm2
image(dist_norm2)
gplots::heatmap.2(dist_norm2, trace = "none", Rowv = NULL, Colv = NULL,
na.color = "gray")
gplots::heatmap.2(dist_norm2/100, trace = "none", hclustfun = function(x) hclust(x, method = "complete"),
distfun = function(x) dist(x,method = "euclidean"),
na.color = "gray")
gplots::heatmap.2(1-dist_norm2/100, trace = "none", hclustfun = function(x) hclust(x, method = "complete"),
distfun = function(x) dist(x,method = "euclidean"),
na.color = "gray")
gplots::heatmap.2(1-dist_norm2/100, trace = "none",
na.color = "gray")
gplots::heatmap.2(1-dist_norm2/100, trace = "none", Rowv = NULL, Colv = NULL,
na.color = "gray")
covariance_mat <- lapply(dat_sim, function(x){
x$precision
})
dat_cov <- lapply(mixture_weights, function(eachmix, covlist){
mix_list = mapply(function(x,y){
x*y
}, eachmix, covlist, SIMPLIFY = F)
solve(netsimulatR:::.add(mix_list))
}, covlist = covariance_mat)
gen_empirical_covariance = lapply(dat_cov, function(x){
dat_tmp = mvtnorm::rmvnorm(300, sigma = x) #+ (mvtnorm::rmvnorm(100, sigma = diag(500)))
cov(scale(dat_tmp))
})
dist_norm2 = sapply(gen_empirical_covariance, function(x){
sapply(gen_empirical_covariance, function(a,b){
k <- a-b
norm(k, type = 'f')
}, x)
})
diag(dist_norm2) <- NA
gplots::heatmap.2(dist_norm2, trace = "none", hclustfun = function(x) hclust(x, method = "complete"),
distfun = function(x) dist(x,method = "euclidean"),
na.color = "gray")
gplots::heatmap.2(dist_norm2, trace = "none", Rowv = NULL, Colv = NULL,
na.color = "gray")
dist_norm2
covariance_mat <- lapply(dat_sim, function(x){
x$precision
})
dat_cov <- lapply(mixture_weights, function(eachmix, covlist){
mix_list = mapply(function(x,y){
x*y
}, eachmix, covlist, SIMPLIFY = F)
solve(netsimulatR:::.add(mix_list))
}, covlist = covariance_mat)
gen_empirical_covariance = lapply(dat_cov, function(x){
dat_tmp = mvtnorm::rmvnorm(300, sigma = x) #+ (mvtnorm::rmvnorm(100, sigma = diag(500)))
cov(scale(dat_tmp))
})
dist_norm2 = sapply(gen_empirical_covariance, function(x){
sapply(gen_empirical_covariance, function(a,b){
k <- a-b
norm(k, type = 'f')
}, x)
})
diag(dist_norm2) <- NA
gplots::heatmap.2(dist_norm2, trace = "none", hclustfun = function(x) hclust(x, method = "complete"),
distfun = function(x) dist(x,method = "euclidean"),
na.color = "gray")
gplots::heatmap.2(dist_norm2, trace = "none", Rowv = NULL, Colv = NULL,
na.color = "gray")
dist_norm2
library(igraph)
library(netsimulatR)
set.seed(111)
dat_sim <- get_multi_covariance(p=500, num_nets = 3, n= 300)
covariance_mat <- lapply(dat_sim, function(x){
x$covariance
})
mixture_weights <- list(d1 = c(0.6, 0.3, 0.1),
d2 = c(0.7, 0.1, 0.2),
d3 = c(0.4, 0.5, 0.1),
d4 = c(0.1, 0.7, 0.2),
d5 = c(0.15, 0.25, 0.6))
# a = sapply(dat_sim, function(x) plot(x$graph))
covariance_mat <- lapply(dat_sim, function(x){
x$precision
})
dat_cov <- lapply(mixture_weights, function(eachmix, covlist){
mix_list = mapply(function(x,y){
x*y
}, eachmix, covlist, SIMPLIFY = F)
solve(netsimulatR:::.add(mix_list))
}, covlist = covariance_mat)
gen_empirical_covariance = lapply(dat_cov, function(x){
dat_tmp = mvtnorm::rmvnorm(300, sigma = x) #+ (mvtnorm::rmvnorm(100, sigma = diag(500)))
cov(scale(dat_tmp))
})
dist_norm2 = sapply(gen_empirical_covariance, function(x){
sapply(gen_empirical_covariance, function(a,b){
k <- a-b
norm(k, type = 'f')
}, x)
})
diag(dist_norm2) <- NA
gplots::heatmap.2(dist_norm2, trace = "none", hclustfun = function(x) hclust(x, method = "complete"),
distfun = function(x) dist(x,method = "euclidean"),
na.color = "gray")
gplots::heatmap.2(dist_norm2, trace = "none", Rowv = NULL, Colv = NULL,
na.color = "gray")
dist_norm2
library(igraph)
library(netsimulatR)
set.seed(111)
dat_sim <- get_multi_covariance(p=500, num_nets = 3, n= 300)
covariance_mat <- lapply(dat_sim, function(x){
x$covariance
})
mixture_weights <- list(d1 = c(0.6, 0.3, 0.1),
d2 = c(0.7, 0.1, 0.2),
d3 = c(0.4, 0.5, 0.1),
d4 = c(0.1, 0.7, 0.2),
d5 = c(0.15, 0.25, 0.6))
# a = sapply(dat_sim, function(x) plot(x$graph))
covariance_mat <- lapply(dat_sim, function(x){
x$precision
})
dat_cov <- lapply(mixture_weights, function(eachmix, covlist){
mix_list = mapply(function(x,y){
x*y
}, eachmix, covlist, SIMPLIFY = F)
solve(netsimulatR:::.add(mix_list))
}, covlist = covariance_mat)
set.seed(111)
gen_empirical_covariance = lapply(dat_cov, function(x){
dat_tmp = mvtnorm::rmvnorm(300, sigma = x) #+ (mvtnorm::rmvnorm(100, sigma = diag(500)))
cov(scale(dat_tmp))
})
dist_norm2 = sapply(gen_empirical_covariance, function(x){
sapply(gen_empirical_covariance, function(a,b){
k <- a-b
norm(k, type = 'f')
}, x)
})
diag(dist_norm2) <- NA
gplots::heatmap.2(dist_norm2, trace = "none", hclustfun = function(x) hclust(x, method = "complete"),
distfun = function(x) dist(x,method = "euclidean"),
na.color = "gray")
gplots::heatmap.2(dist_norm2, trace = "none", Rowv = NULL, Colv = NULL,
na.color = "gray")
dist_norm2
library(igraph)
library(netsimulatR)
set.seed(111)
dat_sim <- get_multi_covariance(p=500, num_nets = 3, n= 300)
covariance_mat <- lapply(dat_sim, function(x){
x$covariance
})
mixture_weights <- list(d1 = c(0.6, 0.3, 0.1),
d2 = c(0.7, 0.1, 0.2),
d3 = c(0.4, 0.5, 0.1),
d4 = c(0.1, 0.7, 0.2),
d5 = c(0.15, 0.25, 0.6))
# a = sapply(dat_sim, function(x) plot(x$graph))
covariance_mat <- lapply(dat_sim, function(x){
x$precision
})
dat_cov <- lapply(mixture_weights, function(eachmix, covlist){
mix_list = mapply(function(x,y){
x*y
}, eachmix, covlist, SIMPLIFY = F)
solve(netsimulatR:::.add(mix_list))
}, covlist = covariance_mat)
gen_empirical_covariance = lapply(dat_cov, function(x){
dat_tmp = mvtnorm::rmvnorm(300, sigma = x) #+ (mvtnorm::rmvnorm(100, sigma = diag(500)))
cov(scale(dat_tmp))
})
dist_norm2 = sapply(gen_empirical_covariance, function(x){
sapply(gen_empirical_covariance, function(a,b){
k <- a-b
norm(k, type = 'f')
}, x)
})
diag(dist_norm2) <- NA
gplots::heatmap.2(dist_norm2, trace = "none", hclustfun = function(x) hclust(x, method = "complete"),
distfun = function(x) dist(x,method = "euclidean"),
na.color = "gray")
gplots::heatmap.2(dist_norm2, trace = "none", Rowv = NULL, Colv = NULL,
na.color = "gray")
dist_norm2
dat <- read.csv("~/research/recount_networks/Untitled spreadsheet - Sheet1.csv")
View(dat)
barplot(dat$Type)
View(dat)
barplot(table(dat$tissue..cell.line))
barplot(table(dat$tissue..cell.line), col = 1:3)
barplot(table(dat$Cancer.), col = 1:3)
barplot(table(dat$Cancer.), col = 1:2)
